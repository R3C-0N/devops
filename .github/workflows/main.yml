name: CI devops 2023
'on':
  push:
    branches: TP02
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test-backend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2.5.0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3.9.0
        with:
          distribution: corretto
          java-version: '17'
          
      - name: Build and test with Maven
        run: mvn clean verify --file ./backend-api/app/pom.xml


  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
          with:
              fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
              java-version: 11
        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
              path: ~/.sonar/cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
              restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=R3C-0N_devops

# define job to build and publish docker image
  build-and-push-docker-image:
  # run only when code is compiling and tests are passing
    needs: test-backend
    environment: devops-tp02
    runs-on: ubuntu-22.04

        # steps to perform in job
    steps:
       - name: Checkout code
         uses: actions/checkout@v2.5.0
         
       - name: Docker Login
         uses: docker/login-action@v2.1.0
         with:
            username: ${{secrets.DOCKER_USER}}
            password: ${{secrets.DOCKER_PWD}}
            
       - name: Build image and push backend
         uses: docker/build-push-action@v3
         with:
             # relative path to the place where source code with Dockerfile is located
             context: ./backend-api
             # Note: tags has to be all lower-case
             tags:  ${{secrets.DOCKER_USER}}/tp01-backend
             push: ${{ github.ref == 'refs/heads/TP02' }}

       - name: Build image and push database
         uses: docker/build-push-action@v3
         with:
             # relative path to the place where source code with Dockerfile is located
             context: ./database
             # Note: tags has to be all lower-case
             tags:  ${{secrets.DOCKER_USER}}/tp01-database
             push: ${{ github.ref == 'refs/heads/TP02' }}

       - name: Build image and push httpd
         uses: docker/build-push-action@v3
         with:
             # relative path to the place where source code with Dockerfile is located
             context: ./http-server
             # Note: tags has to be all lower-case
             tags:  ${{secrets.DOCKER_USER}}/tp01-httpd
             push: ${{ github.ref == 'refs/heads/TP02' }}
